/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package license;

import java.awt.Color;
import java.sql.Connection;
import java.util.Date;
import java.sql.*;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.text.ParseException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sony
 */

public class Appointment extends javax.swing.JFrame {
Connection con;
SimpleDateFormat fmt=new SimpleDateFormat("MM/dd/yyyy");
    Statement st;
    ResultSet rs;
      String str;
      Date d,date;
     // SimpleDateFormat fmd= new SimpleDateFormat("dd/MM/yyyy");
    /**
     * Creates new form Appointment
     */
    public Appointment() {
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        setBounds(100, 100, 620, 500);
        setTitle("Appointment");
        
         try {
             d=(Date) fmt.parse("12/31/2015");
            // TODO add your handling code here:
            Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
            con=DriverManager.getConnection("jdbc:odbc:varun","sa","chandigarh");
           // JOptionPane.showMessageDialog(this, "conn establish");
             get_my_table_data();
            // st.close();
             combo();
            
          
        } 
        catch (Exception e) {
            e.printStackTrace();
        }
 
    }
public void jdc1()
{
    try {
        date=(Date) fmt.parse("12/31/2014");
    } catch (ParseException ex) {
        Logger.getLogger(Appointment.class.getName()).log(Level.SEVERE, null, ex);
    }
    jDateChooser1.setDateFormatString("MM/dd/yyyy");
    java.util.Date d1=new java.util.Date();
    
jDateChooser1.setSelectableDateRange(d1, date);
// jDateChooser2.setSelectableDateRange(new Date(), date);     
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tf_time = new javax.swing.JTextField();
        combo_id = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 600, 170);

        jButton2.setFont(new java.awt.Font("Traditional Arabic", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(51, 0, 204));
        jButton2.setText("Give Appointment");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(210, 340, 200, 40);

        jLabel2.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel2.setText("Date");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(180, 250, 50, 30);

        jLabel3.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel3.setText("Time");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(180, 290, 60, 30);

        tf_time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_timeActionPerformed(evt);
            }
        });
        getContentPane().add(tf_time);
        tf_time.setBounds(230, 290, 130, 30);

        combo_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_idActionPerformed(evt);
            }
        });
        getContentPane().add(combo_id);
        combo_id.setBounds(230, 210, 130, 20);

        jLabel1.setFont(new java.awt.Font("Tw Cen MT", 1, 18)); // NOI18N
        jLabel1.setText("Id:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(180, 210, 40, 20);
        getContentPane().add(jDateChooser1);
        jDateChooser1.setBounds(231, 260, 130, 20);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //String t=(String) jSpinner1.getValue();
       if(jDateChooser1.getDateFormatString().equals("")||tf_time.getText().equals(""))
       {
         JOptionPane.showMessageDialog(this, "All fields are compulsory");
        }
       else
       {
           int result;
          str="insert into admin(id1,date,time) values('"+combo_id.getSelectedItem().toString()+"','"+jDateChooser1.getDate()+"','"+tf_time.getText()+"'"+")";
         // JOptionPane.showMessageDialog(rootPane, str);
           try
           {
               st=con.createStatement();
              result=st.executeUpdate(str);
               if(result==1)
               {
                   JOptionPane.showMessageDialog(this,"Allotted successfully");
                   st.close();
                   str="update register set stat=1 where id1="+combo_id.getSelectedItem();
                   st=con.createStatement();
                    result=st.executeUpdate(str);
                   if(result==1)
                   {
                       JOptionPane.showMessageDialog(this, "changes succesfully saved");
                       get_my_table_data();
                       st.close();
                       combo();
                   }
               }
               else
               {
                   JOptionPane.showMessageDialog(this, "try again");
               }
               
           }
           catch(Exception e)
           {
               e.printStackTrace();
           }
       }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void combo_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_idActionPerformed
        // TODO add your handling code here:
       // tf_id.setText(combo_id.getSelectedItem().toString());
    }//GEN-LAST:event_combo_idActionPerformed

    private void tf_timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_timeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_timeActionPerformed
DefaultTableModel model1;
    
public void get_my_table_data()
{
   
     model1 = (DefaultTableModel)  jTable1.getModel();
      model1.getDataVector().removeAllElements();
        //String[] column_list={"empid","empname","empsalary"};
        //model1.setColumnIdentifiers(column_list);
        
        String str="select id1,name,dob,mobile  from register where stat=0";
       // jTextField4.setText(str);
        
        try {
              Statement st=con.createStatement();
              ResultSet result= st.executeQuery(str);
          
          
          ResultSetMetaData meta_data=result.getMetaData();
          
          
          int col_size=meta_data.getColumnCount();
          String[] col_list=new String[col_size];
          for(int i=0;i<col_size;i++)
          {
              col_list[i]=meta_data.getColumnLabel(i+1).toString();
          }
          model1.setColumnIdentifiers(col_list);
          
          
          while(result.next())
          {
          Object[] row_data=new Object[col_size];
            for(int c=0;c<col_size;c++)
            {
                row_data[c]=result.getObject(c+1);
            }
          model1.addRow(row_data);
          }
          //st.close();;
         // result.close();
         
          
          
        } catch (Exception e) 
        {
           e.printStackTrace();
        }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Appointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Appointment().setVisible(true);
            }
        });
    }
    public void combo()
    {
    try {
     
        combo_id.removeAllItems();
        String str="select id1 from register where stat=0";
        st=con.createStatement();
        rs=st.executeQuery(str);
        while(rs.next())
        {
            combo_id.addItem(Integer.toString(rs.getInt("id1")));
        }
        
      //  st.close();
        
    }
    catch (Exception ex)
    {
        ex.printStackTrace();
    }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox combo_id;
    private javax.swing.JButton jButton2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField tf_time;
    // End of variables declaration//GEN-END:variables
}
